# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
   
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.3.0
    
    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.io
        logout: true

    - name: Build and push Docker images
      run: |
        docker build -t tnehara831/fashionfitsme-backend:latest VirtualFitON
        docker push tnehara831/fashionfitsme-backend:latest

    - name: Deploy to EC2 server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_BASE64 }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          TARGET: FashionFitsMe

    - name: SSH to EC2 and update backend service
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY_BASE64 }}
          script: |
            docker-compose -f FashionFitsMe/docker-compose.yml pull spring-app
            docker-compose -f FashionFitsMe/docker-compose.yml up -d spring-app
      

    
